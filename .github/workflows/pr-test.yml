---
name: Test
on:
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - src/**
              - Cargo.toml
              - Cargo.lock

  test:
    needs: changes
    if: needs.changes.outputs.src == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Update local toolchain
        run: |
          rustup update

      - name: Install nightly
        if: matrix.rust-toolchain == 'nightly'
        run: |
          rustup install nightly
          rustup default ${{ matrix.rust-toolchain }}

      - name: Install clippy
        if: matrix.rust-toolchain == 'stable'
        run: |
          rustup component add clippy

      - name: Toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          [ "${{ matrix.rust-toolchain }}" == 'stable' ] && cargo clippy --version || :

      - name: Dependency cache
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.rust-toolchain }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust-toolchain }}-target-

      - name: Lint
        if: matrix.rust-toolchain == 'stable'
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings

      - name: Test
        run: |
          cargo check
          cargo test --all

      - name: Build
        run: |
          cargo install --path .

      - uses: actions/setup-node@v3
        if: matrix.rust-toolchain == 'stable'
        with:
          node-version: 16

      - name: npm dependency cache
        if: matrix.rust-toolchain == 'stable'
        uses: actions/cache@v3
        with:
          path: test/cdk/.npm
          key: ${{ runner.os }}-${{ matrix.rust-toolchain }}-node-${{ hashFiles('test/cdk/node_modules/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust-toolchain }}-node-

      - name: Prepare test stacks
        if: matrix.rust-toolchain == 'stable'
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          make test

        #@TODO: run the test

      - name: Delete test stacks
        if: matrix.rust-toolchain == 'stable'
        run: |
          make test-reset
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  report-status:
    name: success
    if: ${{ ! failure() }}
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Report success
        run: echo 'Success'
